### Test the first endpoint ###
GET http://127.0.0.1:8081/card/
Accept: application/json

> {%
    client.test("Request is 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Add a New Card ###
POST http://localhost:8081/card/addCard
Content-Type: application/json

{
  "name": "first-card",
  "description": "a test card2",
  "imageUrl": "",
  "family": "fire",
  "affinity": "water",
  "hp": 100,
  "attack": 45,
  "defense": 30,
  "energy": 25
}

> {%
    client.test("Request is 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Get All Cards ###
GET http://localhost:8081/card/getCards
Accept: application/json;

> {%
    client.test("Request is 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });

    client.global.set("card_uuid", response.body[0].uuid);
%}

### Get Card by UUID ###
GET http://localhost:8081/card/{{card_uuid}}
Accept: application/json

> {%
    client.test("Request is 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}

### Delete Card by UUID ###
< {%
let card_uuid = client.global.get("card_uuid");
client.log(card_uuid);
%}

DELETE http://localhost:8081/card/deleteCard
Content-Type: application/json

{
  "uuid": "{{card_uuid}}"
}

> {%
    client.test("Request is 200", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
    // different to NOT_FOUND
    client.test("Card is deleted", function() {
        client.assert(response.body !== "NOT_FOUND", "Card is not deleted");
    });
%}

### Verify Card is Deleted ###
GET http://localhost:8081/card/{{card_uuid}}
Accept: application/json

> {%
    client.test("Request is 404", function() {
        client.assert(response.status === 404, "Response status is not 404, the card should have been deleted by the previous test/request");
    });
%}
